{# Layout #}
{% extends '_layouts/site' %}

{# macros #}
{% import '_includes/macros' as _macros %}

{# Params #}
{# Get sort from query string #}
{% set sort = craft.app.request.getQueryParam('sort') %}
{# Get color slugs from the query string #}
{% set colorSlugs = craft.app.request.getQueryParam('colors') %}
{% set colorSlugs = colorSlugs ? colorSlugs|split('|') : [] %}
{# Get material slugs from the query string #}
{% set materialSlugs = craft.app.request.getQueryParam('material') %}
{% set materialSlugs = materialSlugs ? materialSlugs|split('|') : [] %}
{# Setup the filter params #}
{% set urlFilterParams = {
  colors: colorSlugs,
  material: materialSlugs
} %}
{% if sort %}
  {% set urlFilterParams = urlFilterParams|merge({ sort: sort }) %}
{% endif %}
{% set productIds = [] %}

{# Variables #}
{% set isAllBikes = category is not defined and entry is defined and entry.type.handle == 'bikesLanding' %}
{# Get all the categories for the sidebar filter #}
{% set colorCategories = craft.categories({
  group: 'colors'
}).all() %}
{% set materialCategories = craft.categories({
  group: 'material'
}).all() %}
{% set bikeCategories = craft.categories({
  group: 'bikeTypes'
}).all() %}

{% if colorSlugs|length %}
  {% set relatedColors = colorCategories|filter(cc => cc.slug in colorSlugs) %}
  {% set productIds = craft.products({
    relatedTo: ['or', { targetElement: relatedColors, field: 'colors' }]
  }).ids() %}
{% endif %}

{% if materialSlugs|length %}
  {% set relatedMaterials = materialCategories|filter(mc => mc.slug in materialSlugs) %}
  {% set materialProductIds = craft.products({
    relatedTo: ['or', { targetElement: relatedMaterials, field: 'material' }]
  }).ids() %}
  {% if materialProductIds|length %}
    {% set productIds = productIds|filter(id => id in materialProductIds) %}
  {% endif %}
{% endif %}

{% set productQueryOptions = {
  type: 'bike'
} %}
{% if sort %}
  {% switch sort %}
    {% case 'dateasc' %}
      {% set productQueryOptions = productQueryOptions|merge({
        orderBy: 'postDate ASC'
      }) %}
    {% case 'priceasc' %}
      {% set productQueryOptions = productQueryOptions|merge({
        orderBy: 'defaultPrice ASC'
      }) %}
    {% case 'pricedesc' %}
      {% set productQueryOptions = productQueryOptions|merge({
        orderBy: 'defaultPrice DESC'
      }) %}
    {% default %}
      {% set productQueryOptions = productQueryOptions|merge({
        orderBy: 'postDate DESC'
      }) %}
  {% endswitch %}
{% endif %}
{% if not isAllBikes %}
  {% set productQueryOptions = productQueryOptions|merge({
    relatedTo: [category]
  }) %}
{% endif %}
{% set productQuery = craft.products(productQueryOptions) %}
{% if not productIds|length and colorSlugs|length  %}
  {# If there are no matching products for the other filters we need not return anything #}
  {% set products = [] %}
{% elseif productIds|length %}
  {% set productQuery = productQuery.id(productIds) %}
  {% set products = productQuery.all() %}
{% else %}
  {% set products = productQuery.all() %}
{% endif %}

{# Sort URL #}
{% set sortUrl = craft.app.request.getUrl()|replace('?' ~ craft.app.request.getQueryString(), '') %}
{% set sortUrl = _macros.filterSiteUrl(sortUrl, urlFilterParams|merge({sort: 'sort'})) %}

{# Blocks #}
{% block content %}
  <!-- Template: {{ _self }}.twig -->

  {# Hero #}
  {% set mainImageUrl = null %}

  {% if isAllBikes %}
    {% set mainImage = entry.mainImage.one() %}
  {% else %}
    {% set mainImage = category.mainImage.one() %}
  {% endif %}

  {% set mainImageUrl = mainImage.url ?? null %}

  <div class="bg-gray-700">
    {% include '_includes/components/hero' with {
      image: mainImageUrl,
      title: isAllBikes ? entry.title : category.title,
      button: 'Click',
      short: true,
    } only %}
  </div>

  <div class="bg-gray-100">
    <div class="container py-6">
      <div x-data="{showFilters: false}" class="md:flex">
        <div class="md:w-1/5 md:mr-12 mb-6">
          <button class="button w-full md:hidden" @click="showFilters = !showFilters">{{ 'Filters'|t }}</button>

          <div class="mt-4 md:mt-0" :class="{'hidden md:block': !showFilters}">
            {% include '_includes/components/filters/bike' with {
              types: bikeCategories,
              selected: category is defined ? category.id : null,
              urlFilterParams: urlFilterParams
            } only %}
            {% if colorCategories|length %}
              <hr class="my-6">
              {% include '_includes/components/filters/color' with {
                heading: 'Color'|t('site'),
                showHeading: true,
                colors: colorCategories,
                urlFilterParams: urlFilterParams
              } only %}
            {% endif %}
            {% if materialCategories|length %}
              <hr class="my-6">
              {% include '_includes/components/filters/material' with {
                heading: 'Material'|t('site'),
                showHeading: true,
                materials: materialCategories,
                urlFilterParams: urlFilterParams
              } only %}
            {% endif %}

            <hr class="my-6">
            <form x-data="sort()" x-init="url = '{{ sortUrl }}';" id="filters-sort" action="{{ siteUrl(craft.app.request.getUrl()) }}" method="get">
              <select name="sort" id="" @change="onChange($event, $refs)" x-ref="sort">
                <option value="">{{ 'Newest to Oldest'|t }}</option>
                <option value="dateasc" {{ sort and sort == 'dateasc' ? 'selected' : '' }}>{{ 'Oldest to Newest'|t }}</option>
                <option value="priceasc" {{ sort and sort == 'priceasc' ? 'selected' : '' }}>{{ 'Price: Low to High'|t }}</option>
                <option value="pricedesc" {{ sort and sort == 'pricedesc' ? 'selected' : '' }}>{{ 'Price: High to Low'|t }}</option>
              </select>
            </form>
          </div>
        </div>
        <div class="w-full md:w-4/5">
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-6 xl:grid-cols-3">
            {% for product in products %}
              <div>
                {% include '_includes/components/cards/product' with {
                  title: product.title,
                  image: true,
                  url: product.url,
                  price: product.defaultPriceAsCurrency
                } only %}
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </div>
  </div>
{% endblock %}