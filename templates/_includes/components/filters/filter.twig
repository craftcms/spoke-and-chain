<!-- Template: {{ _self }}.twig -->
<input type="hidden" name="currentPushUrl" value="{{ pushUrl }}">
<input type="hidden" name="saveState" x-model="saveState">

<div class="bg-gray-100">
  <div class="container py-6">
    <div class="md:flex">
      <div class="md:w-1/5 md:mr-12 mb-6">
        <button class="button w-full md:hidden" @click="showFilters = !showFilters">{{ 'Filters'|t }}</button>

        <div class="mt-4 md:mt-0" :class="{'hidden md:block': !showFilters}">
          {% include '_includes/components/filters/bike' with {
            types: types,
            selected: type,
            urls: filterUrlsByType.types,
          } only %}
          {% if colorFilters|length %}
            <hr class="my-6">
            {% include '_includes/components/filters/color' with {
              heading: 'Color'|t('site'),
              showHeading: true,
              colors: colorFilters,
              urls: filterUrlsByType.colors,
              selectedColors: colors,
            } only %}
          {% endif %}
          {% if materialFilters|length %}
            <hr class="my-6">
            {% include '_includes/components/filters/material' with {
              heading: 'Material'|t('site'),
              showHeading: true,
              materials: materialFilters,
              urls: filterUrlsByType.materials,
              selectedMaterials: materials,
            } only %}
          {% endif %}

          <hr class="my-6">
          <select name="sort" id="" x-on:change="refresh()" x-model="sort">
            {% for opt in sortOptions %}
              <option value="{{ opt.value }}" {{ opt.selected }}>{{ opt.label }}</option>
            {% endfor %}
          </select>
        </div>
      </div>
      <div class="w-full md:w-4/5">
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-6 xl:grid-cols-3 grid-flow-row auto-rows-max">
          {% for product in products %}
            {% include '_includes/components/cards/product' with {
              title: product.title,
              image: product.mainImage.one(),
              url: product.url,
              price: product.defaultPriceAsCurrency
            } only %}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
    var currentState = {
        sort: '{{ sort }}',
        colors: {{ colors|json_encode|raw }},
        materials: {{ materials|json_encode|raw }},
        type: '{{ type }}'
    };

    {% if saveState and saveState != 'false' %}
      window.dispatchEvent(new CustomEvent('saveFilterState', {
          detail: currentState
      }))
    {% endif %}

    // Push state URL
    if (window.location != '{{ pushUrl }}') {
      history.pushState(window.currentState, '', '{{ pushUrl|raw }}')
    }
</script>