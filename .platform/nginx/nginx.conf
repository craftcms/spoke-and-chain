user                    nginx;
error_log               /var/log/nginx/error.log warn;
pid                     /var/run/nginx.pid;
worker_processes        auto;
worker_rlimit_nofile    200000;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    include       conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default     "upgrade";
    }

    # Bots to ban via user agent
    map $http_user_agent $limit_bots {
         default 0;
         ~*(AhrefsBot|Baiduspider|PaperLiBot) 1;
    }

    # redirect http to https
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        server_tokens off;
        return 301 https://$host$request_uri;
    }

    server {
        listen        80 default_server;
        access_log    /var/log/nginx/access.log main;
        charset utf-8;

        client_header_timeout 60;
        client_body_timeout   60;
        keepalive_timeout     60;
        gzip                  on;
        gzip_comp_level       4;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_static           on;

        # Disable limits on the maximum allowed size of the client request body
        client_max_body_size 0;

        # Ban certain bots from crawling the site
        if ($limit_bots = 1) {
            return 403;
        }

        # 404 error handler
        error_page 404 /index.php?$query_string;

        location / {
            try_files $uri/index.html $uri $uri/ /index.php?$query_string;
        }

        # Include the Elastic Beanstalk generated locations
        include conf.d/elasticbeanstalk/*.conf;
    }
}